{"version":3,"sources":["components/NavBarScroller.tsx","Cart Item/CartItem.styles.ts","Cart Item/CartItem.tsx","Cart/Cart.styles.ts","Cart/cart.tsx","Item/Item.Styles.ts","Item/Item.tsx","App.styles.ts","components/products.tsx","components/components.styles.ts","components/Home.tsx","components/About.tsx","components/Contact.tsx","components/Customizer.tsx","App.tsx","index.tsx"],"names":["Theme","bg","dark","light","red","body","heading","Navbar","styled","nav","Brand","a","Li","li","NavBarScroller","props","brand","links","NavLinks","map","link","href","to","name","Wrapper","div","CartItem","item","addToCart","removeFromCart","title","className","price","amount","toFixed","Button","size","variant","onClick","id","src","image","alt","aside","Cart","items","cartItems","length","reduce","ack","Item","handleAddToCart","description","StyledButton","IconButton","getProducts","fetch","json","withRouter","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","Title","h1","Heading","navigation","App","path","exact","component","Customizer","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b1a93321.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Theme = {\n  colors: {\n    bg: `#fff`,\n    dark: `#24292e`,\n    light: `#EEEEEE`,\n    red: `#ff5851`,\n  },\n  fonts: {\n    body: `Arial, Helvetica, sans-serif`,\n    heading: `Arial, Helvetica, sans-serif`,\n  },\n};\n\nconst Navbar = styled.nav`\n  background: ${Theme.colors.bg};\n  font-family: ${Theme.fonts.heading};\n  color: ${Theme.colors.dark};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  a {\n    color: black;\n    text-decoration: none;\n  }\n`;\n\nconst Brand = styled.a`\n  font-style: bold;\n  font-size: 32pt;\n  font: Helvetica;\n  padding-right: 20px;\n  padding-left: 20px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  margin-right: 50px;\n  border: 3px black solid;\n`;\n\nconst Li = styled.li`\n  flex: auto;\n  -webkit-box-align: right;\n  -webkit-box-pack: center;\n  -webkit-tap-highlight-color: transparent;\n  align-items: center;\n  color: #999;\n  height: 100%;\n  justify-content: right;\n  text-decoration: none;\n  -webkit-box-align: right;\n  -webkit-box-pack: right;\n  -webkit-tap-highlight-color: transparent;\n  align-items: right;\n  color: #999;\n  display: flex;\n  font-size: 20px;\n  height: 75px;\n  justify-content: right;\n  line-height: 16px;\n  margin-right: 20px;\n  white-space: wrap;\n`;\n\nconst NavBarScroller = (props: {\n  brand: { name: string; to: string };\n  links: Array<{ name: string; to: string }>;\n}) => {\n  const { brand, links } = props;\n  const NavLinks: any = () =>\n    links.map((link: { name: string; to: string }) => (\n      <Li key={link.name}>\n        <a href={link.to}>{link.name}</a>\n      </Li>\n    ));\n  return (\n    <Navbar>\n      <Brand href={brand.to}>{brand.name}</Brand>\n\n      <NavLinks />\n    </Navbar>\n  );\n};\n\nexport default NavBarScroller;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 2px solid black;\n  padding-bottom: 20px;\n  white-space: wrap;\n\n  div {\n    flex: 1;\n  }\n\n  .information,\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`;\n","import Button from '@material-ui/core/Button';\n\n//types\nimport { CartItemType } from '../components/products';\n\n//styles\nimport { Wrapper } from './CartItem.styles';\n\ntype Props = {\n  item: CartItemType;\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n  <Wrapper>\n    <div>\n      <h3>{item.title}</h3>\n      <div className=\"information\">\n        <p>Price: ${item.price}</p>\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => removeFromCart(item.id)}\n        >\n          -\n        </Button>\n        <p> Quantity: {item.amount}</p>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          onClick={() => addToCart(item)}\n        >\n          +\n        </Button>\n      </div>\n    </div>\n    <img src={item.image} alt={item.title} />\n  </Wrapper>\n);\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n  font-family: Arial. Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n  background: #ffffff;\n  border-width: 5px 0 0 5px;\n  border: black;\n  border-style: solid;\n  justify-content: right;\n`;\n","import CartItem from '../Cart Item/CartItem';\n\n//styles\nimport { Wrapper } from './Cart.styles';\n\n//Types\nimport { CartItemType } from '../components/products';\n\ntype Props = {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length === 0 ? <p>No Items In Cart.</p> : null}\n      {cartItems.map((item) => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 100%;\n    border 1px solid black;\n    border-radius: 20px;\n    height: 100%;\n    \n    \n    button {\n        border-radius: 0 0 20px 20px;\n        background-color: black;\n        color: white;\n    }\n\n    button: hover {\n        background-color: white;\n        color: black;\n      }\n    img {\n        max-height: 250px;\n        object-fit: cover;\n        border-radius: 20px 20px 0 0;\n    }\n\n    div {\n        font-family: Arial, Helvetica, sans-serif;\n        padding: 40px;\n        height: 100%;   \n    }\n\n`;\n","import Button from '@material-ui/core/Button';\n\n// Types\nimport { CartItemType } from '../components/products';\n\n// Styles\nimport { Wrapper } from './Item.Styles';\n\ntype Props = {\n  item: CartItemType;\n  handleAddToCart: (cickedItemType: CartItemType) => void;\n};\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\n  <Wrapper>\n    <img src={item.image} alt={item.title} />\n    <div>\n      <h3>{item.title}</h3>\n      <p>{item.description}</p>\n      <h3>${item.price}</h3>\n    </div>\n    <Button onClick={() => handleAddToCart(item)}>Add to Cart</Button>\n  </Wrapper>\n);\nexport default Item;\n","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport const Wrapper = styled.div`\n  background-color: #707070;\n  border: 40px;\n  border-style: solid;\n  border-color: #707070;\n  width: auto;\n  height: auto;\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 10px;\n  top: 10px;\n  color: black;\n  background: radial-gradient(#ffffff, #707070);\n  float: right;\n`;\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport 'reset-css';\nimport { withRouter } from 'react-router-dom';\n// components\nimport Drawer from '@material-ui/core/Drawer';\nimport Cart from '../Cart/cart';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\nimport Item from '../Item/Item';\n\n// styles\nimport { Wrapper, StyledButton } from '../App.styles';\n\n// types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  price: number;\n  image: string;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst Products = (): any => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, items) => ack + items.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) {\n            return ack;\n          }\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) {\n    return <LinearProgress />;\n  }\n  if (error) {\n    return <div>Something went wrong ... </div>;\n  }\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <div>\n          <Cart\n            cartItems={cartItems}\n            addToCart={handleAddToCart}\n            removeFromCart={handleRemoveFromCart}\n          />\n        </div>\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default withRouter(Products);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #707070;\n  border: 40px;\n  border-style: solid;\n  border-color: #707070;\n  width: auto;\n  height: auto;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  font-family: Arial, Helvetica, sans-serif;\n  color: black;\n  font-size: 28pt;\n  margin-left: 50px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Heading = styled.h1`\n  font-family: Arial, Helvetica, sans-serif;\n  color: white;\n  font-size: 20pt;\n  margin-left: 50px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import { Wrapper } from './components.styles';\nimport { Title } from './components.styles';\n\nimport { withRouter } from 'react-router-dom';\nfunction Home() {\n  return (\n    <Wrapper>\n      <Title>IMAGE EEEEEEEEEVENTUALLY</Title>\n    </Wrapper>\n  );\n}\n\nexport default withRouter(Home);\n","import { Wrapper } from './components.styles';\nimport { Heading } from './components.styles';\nimport { Title } from './components.styles';\n\nimport { withRouter } from 'react-router-dom';\nfunction About() {\n  return (\n    <Wrapper>\n      <Title>About Me</Title>\n      <Heading>Hi, I'm Nathan</Heading>\n    </Wrapper>\n  );\n}\nexport default withRouter(About);\n","import { Wrapper } from './components.styles';\nimport { Heading } from './components.styles';\nimport { Title } from './components.styles';\n\nimport { withRouter } from 'react-router-dom';\n\nfunction Contact() {\n  return (\n    <Wrapper>\n      <Title> Contact</Title>\n      <Heading>You can find me on Instagram: @Nathan.Cameron.Creations</Heading>\n      <Heading>\n        Or contact me through email at: nathan.cameron.creations@gmail.com\n      </Heading>\n    </Wrapper>\n  );\n}\n\nexport default withRouter(Contact);\n","import { Wrapper } from './components.styles';\nimport { Heading } from './components.styles';\nimport { Title } from './components.styles';\n\nimport { withRouter } from 'react-router-dom';\nfunction customizer() {\n  return (\n    <Wrapper>\n      <Title>Ring Customizer</Title>\n      <Heading>\n        In the future you will be able to order a custom ring through this page!\n      </Heading>\n    </Wrapper>\n  );\n}\n\nexport default withRouter(customizer);\n","import 'reset-css';\nimport NavBarScroller from './components/NavBarScroller';\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from 'react-router-dom';\nimport Products from './components/products';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Customizer from './components/Customizer';\n\nconst navigation = {\n  brand: { name: 'Nathan Cameron Creations', to: '/Ring-Website/#' },\n  links: [\n    { name: 'Home', to: '/Ring-Website/#' },\n    { name: 'Products', to: '/Ring-Website/#/prod' },\n    { name: 'Ring Customizer', to: '/Ring-Website/#/cust' },\n    { name: 'About Me', to: '/Ring-Website/#/about' },\n    { name: 'Contact', to: '/Ring-Website/#/contact' },\n  ],\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <NavBarScroller brand={navigation.brand} links={navigation.links} />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/prod\" exact component={() => <Products />} />\n          <Route path=\"/about\" exact component={() => <About />} />\n          <Route path=\"/cust\" exact component={() => <Customizer />} />\n          <Route path=\"/contact\" exact component={() => <Contact />} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nconst client = new QueryClient();\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}